# 1. Build Stage
FROM node:20-alpine AS builder
WORKDIR /app
RUN corepack enable

# Copy dependency manifests for all workspaces
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY apps/api/package.json ./apps/api/
COPY apps/web/package.json ./apps/web/
COPY packages/db/package.json ./packages/db/

# Install all dependencies needed for building
RUN pnpm install --frozen-lockfile

# Copy all source code
COPY . .

# Build the api workspace
RUN pnpm run build --filter=api

# 2. Production Stage
FROM node:20-alpine AS runner
WORKDIR /app
ENV NODE_ENV=production
RUN corepack enable

# Copy dependency manifests for production install
COPY --from=builder /app/package.json /app/pnpm-lock.yaml /app/pnpm-workspace.yaml ./
COPY --from=builder /app/apps/api/package.json ./apps/api/
COPY --from=builder /app/packages/db/package.json ./packages/db/

# Install only production dependencies
RUN pnpm install --prod

# Copy the built code and dependent packages from the builder stage
COPY --from=builder /app/apps/api/dist ./apps/api/dist
COPY --from=builder /app/packages/db ./packages/db

WORKDIR /app/apps/api
EXPOSE 3000

# Start the application directly with Node
CMD ["node", "./dist/index.js"]
